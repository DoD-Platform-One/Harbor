
- name: "Checking if Docker Installed"
  shell: "docker ps"
  register: docker_status
  failed_when: false

- set_fact:
    need_to_install_docker: "{{False if (docker_status.rc == 0) else True}}"

- debug:
    msg: "need_to_install_docker: {{need_to_install_docker}}"

- name: "Installing Docker"
  when: need_to_install_docker
  block: 
  - name: "Installing docker, not frozen, wait 2-3 minutes (streaming to log file on REMOTE_VM:~/docker-install.log"
    become: true
    shell: "{{item}}" 
    args:
      warn: false
    loop:
    - "curl -fsSL https://get.docker.com | bash 2>&1 | tee /home/{{REMOTE_VM_USER}}/docker-install.log"
    - "systemctl enable docker"
    - "systemctl start docker"
    - "usermod -aG docker {{REMOTE_VM_USER}}"
- name: "Reset SSH connection, acts as logout login, so user added to docker group is recognised"
  meta: reset_connection # moved out of when block to avoid warning + doesn't hurt
#########################################################
- name: "Checking if k3d Installed"
  shell: "k3d version"
  register: k3d_status
  failed_when: false

- set_fact:
    need_to_install_k3d: "{{False if (k3d_status.rc == 0) else True}}"

- debug:
    msg: "need_to_install_k3d: {{need_to_install_k3d}}"

- name: "Installing k3d"
  when: need_to_install_k3d
  block: 
  - name: "Install k3d"
    become: true
    shell: "{{item}}" 
    args:
      warn: false
    loop:
    - "curl -LO https://github.com/rancher/k3d/releases/download/v3.4.0/k3d-linux-amd64"
    - "chmod +x ./k3d-linux-amd64"
    - "mv ./k3d-linux-amd64 /usr/local/bin/k3d"
#########################################################
- set_fact:
    REMOTE_VM_IP: "{{ hostvars.localhost.groups.k3d_test_node[0] }}"

- name: "k3d cluster create (streaming output to log file on REMOTE_VM:~/k3d-cluster-create.log"
  shell: "k3d cluster create --k3s-server-arg '--tls-san={{REMOTE_VM_IP}}' -p 80:80@loadbalancer -p 443:443@loadbalancer 2>&1 | tee /home/{{REMOTE_VM_USER}}/k3d-cluster-create.log" 
  environment:
    KUBECONFIG: "/home/{{REMOTE_VM_USER}}/.kube/config" #k3d will create file specified in env var
  args:
    chdir: "/home/{{REMOTE_VM_USER}}"
    warn: false
  register: shell_output
- debug: 
    msg: "{{shell_output.stdout_lines}} + {{shell_output.stderr_lines}}"

- name: "Copy kubectl locally"
  fetch: 
    src: "/home/{{REMOTE_VM_USER}}/.kube/config"
    dest: "/shared_mount/harbor_registry_kubectl.config"
    mode: pull
    flat: yes

- name: "Use sed stream editor to find and replace the local copy"
  delegate_to: localhost
  connection: local
  shell: "sed -i s@0.0.0.0@{{REMOTE_VM_IP}}@g /shared_mount/harbor_registry_kubectl.config"
  args: 
    warn: false

- name: "kubectl get node verification"
  delegate_to: localhost
  connection: local
  shell: "kubectl get node"
  args: 
    warn: false
  register: result

- debug:
    msg: "{{result.stdout_lines}} + {{result.stderr_lines}}"
